Index sharding is the concept of keeping more than one inverted index for a particular search engine. This is easily achieved by stopping the postings chunk merging process when the number of chunks is equal to the number of desired shards. All the same data is stored as one final chunk, but it's just broken down into several pieces. But why would we want multiple inverted index chunks? Consider when we have the number of shards equal to the number of threads (or cluster nodes) in our search system. You can probably imagine an algorithm where each thread searches for matching terms in its respective shard, and the final search results 