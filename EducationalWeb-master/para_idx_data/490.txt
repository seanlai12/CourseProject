(1) mark all objects as unvisited; (2) do (3) randomly select an unvisited object p; (4) mark p as visited; (5) if the -neighborhood of p has at least MinPts objects (6) create a new cluster C, and add p to C; (7) let N be the set of objects in the -neighborhood of p; if the -neighborhood of p has at least MinPts points, add those points to N ; if p is not yet a member of any cluster, add p to C; (13) end for (14) output C; (15) else mark p as noise; (16) until no object is unvisited; are usually empirically set and difficult to determine, especially for real-world, highdimensional data sets. Most algorithms are sensitive to these parameter values: Slightly different settings may lead to very different clusterings of the data. Moreover, real-world, high-dimensional data sets often have very skewed distributions such that their intrinsic clustering structure may not be well characterized by a single set of global density parameters. Note that density-based clusters are monotonic with respect to the neighborhood threshold. That is, in DBSCAN, for a fixed MinPts value and two neighborhood thresholds, 1 < 2 , a cluster C with respect to 1 and MinPts must be a subset of a cluster C with respect to 2 and MinPts. This means that if two objects are in a density-based cluster, they must also be in a cluster with a lower density requirement. To overcome the difficulty in using one set of global parameters in clustering analysis, a cluster analysis method called OPTICS was proposed. OPTICS does not explicitly produce a data set clustering. Instead, it outputs a cluster ordering. This is a linear list of all objects under analysis and represents the density-based clustering structure of the data. Objects in a denser cluster are listed closer to each other in the cluster ordering. This ordering is equivalent to density-based clustering obtained from a wide range of parameter settings. Thus, OPTICS does not require the user to provide a specific density threshold. The cluster ordering can be used to extract basic clustering information (e.g., cluster centers, or arbitrary-shaped clusters), derive the intrinsic clustering structure, as well as provide a visualization of the clustering. To construct the different clusterings simultaneously, the objects are processed in a specific order. This order selects an object that is density-reachable with respect to the lowest value so that clusters with higher density (lower ) will be finished first. Based on this idea, OPTICS needs two important pieces of information per object: The core-distance of an object p is the smallest value such that the -neighborhood of p has at least MinPts objects. That is, is the minimum distance threshold that makes p a core object. If p is not a core object with respect to and MinPts, the core-distance of p is undefined. The reachability-distance to object p from q is the minimum radius value that makes p density-reachable from q. According to the definition of density-reachability, q has to be a core object and p must be in the neighborhood of q. Therefore, the reachability-distance from q to p is max{core-distance(q), dist(p, q)}. If q is not a core object with respect to and MinPts, the reachability-distance to p from q is undefined. An object p may be directly reachable from multiple core objects. Therefore, p may have multiple reachability-distances with respect to different core objects. The smallest reachability-distance of p is of particular interest because it gives the shortest path for which p is connected to a dense cluster. Example 10.8 Core-distance and reachability-distance. Figure 10.16 illustrates the concepts of coredistance and reachability-distance. Suppose that = 6 mm and MinPts = 5. The coredistance of p is the distance, , between p and the fourth closest data object from p. The reachability-distance of q 1 from p is the core-distance of p (i.e., = 3 mm) because this is greater than the Euclidean distance from p to q 1 . The reachability-distance of q 2 with respect to p is the Euclidean distance from p to q 2 because this is greater than the core-distance of p. OPTICS computes an ordering of all objects in a given database and, for each object in the database, stores the core-distance and a suitable reachability-distance. OPTICS maintains a list called OrderSeeds to generate the output ordering. Objects in Order-Seeds are sorted by the reachability-distance from their respective closest core objects, that is, by the smallest reachability-distance of each object. OPTICS begins with an arbitrary object from the input database as the current object, p. It retrieves the -neighborhood of p, determines the core-distance, and sets the reachability-distance to undefined. The current object, p, is then written to output. If p is not a core object, OPTICS simply moves on to the next object in the OrderSeeds list (or the input database if OrderSeeds is empty). If p is a core object, then for each object, q, in the -neighborhood of p, OPTICS updates its reachability-distance from p and inserts q into OrderSeeds if q has not yet been processed. The iteration continues until the input is fully consumed and OrderSeeds is empty. A data set's cluster ordering can be represented graphically, which helps to visualize and understand the clustering structure in a data set. For example, Figure 10.17 is the reachability plot for a simple 2-D data set, which presents a general overview of how the data are structured and clustered. The data objects are plotted in the clustering order (horizontal axis) together with their respective reachability-distances (vertical axis). The three Gaussian "bumps" in the plot reflect three clusters in the data set. Methods have also been developed for viewing clustering structures of high-dimensional data at various levels of detail. The structure of the OPTICS algorithm is very similar to that of DBSCAN. Consequently, the two algorithms have the same time complexity. The complexity is O(n log n) if a spatial index is used, and O(n 2 ) otherwise, where n is the number of objects. 