quired to encode and decode. Every single bit needs to be read in order to read one integer. Block compression attempts to alleviate this issue by reading bytes at a time instead of bits. In block compression schemes, only one bitwise operation per byte is usually required as opposed to at least one operation per bit in the previous three schemes (e.g., count how many bit operations are required to δ-encode the integer 47). Block compression seeks to reduce the number of CPU instructions required in decoding at the expense of using more storage. The two block compression methods we will investigate deal mainly with bytes instead of bits. vByte stands for variable byte encoding. It uses the lower seven bits of a byte to store a binary number and the most significant bit as a flag. The flag signals whether the decoder should keep reading the binary number. The parentheses below are added for emphasis. The decoder works by keeping a sum (which starts at zero) and adding each byte into the sum as it is processed. Notice how the bytes are "chained" together backwards. For every "link" we follow, we left shift the byte to add by 7 × k, where k is the number of bytes read so far. Therefore, the sum we have to decode the integer 20,000 is which is the same as = 20,000 d 