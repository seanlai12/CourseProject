Now that we have our inverted index, how can we use it to efficiently score queries? Imagine for a moment that we don't have an inverted index; we only have the forward index, which maps document IDs to a list of terms that occur in them. To score a query vector, we'd need to iterate through every single entry (i.e., document) in the forward index and run a scoring function on the each (document, query) pair. Most likely, many documents do not contain any of the query terms (especially if stop word removal is performed), which means that their ranking score will be zero. Why should we bother scoring these documents anyway? This is exactly how we can benefit from an inverted index: we can only score documents that match at least one query term-that is, we will only score documents that will have nonzero scores. We assume (and verify in practice) that scoring only documents containing terms that appear in the query results in much less scoring computation. This leads us to our first scoring algorithm using the inverted index. 