In the previous chapter, we discussed how to perform text clustering-grouping documents together based on similar features. Clustering techniques are unsupervised, which has the advantage of not requiring any manual effort from humans and being applicable to any text data. However, we often want to group text objects in a particular way according to a set of pre-defined categories. For example, a news agency may be interested in classifying news articles into one or more topical categories such as technology, sports, politics, or entertainment, etc. If we are to use clustering techniques to solve this problem, we may obtain coherent topical clusters, but these clusters do not necessarily correspond to the categories the news agency has designed (for their application purpose). To solve such a problem, we can use text categorization techniques, which have widespread applications. In general, the text categorization problem is as follows. Given a set of predefined categories, possibly forming a hierarchy, and often also a training set of labeled text objects (i.e., text objects with known labels of categories), the task of text categorization is to label (unseen) text objects with one or more categories. This is illustrated in Figure 15.1. At the very high level, text categorization is usually to help achieve two goals of applications. 1. To enrich text representation (i.e., achieving more understanding of text): with text categorization, we would be able to represent text in multiple levels (keywords + categories). In such an application, we also call text categorization text annotation. For example, semantic categories assigned to text can be directly useful for an application as in the case of spam detection. Semantic categories assigned to text data can also facilitate aggregation of text content in a more meaningful way; for example, sentiment classification would enable aggregation of all positive/negative opinions about a product so as to give a more meaningful overall assessment of opinions. 