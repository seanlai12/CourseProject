Chameleon is a hierarchical clustering algorithm that uses dynamic modeling to determine the similarity between pairs of clusters. In Chameleon, cluster similarity is assessed based on (1) how well connected objects are within a cluster and (2) the proximity of clusters. That is, two clusters are merged if their interconnectivity is high and they are close together. Thus, Chameleon does not depend on a static, user-supplied model and can automatically adapt to the internal characteristics of the clusters being merged. The merge process facilitates the discovery of natural and homogeneous clusters and applies to all data types as long as a similarity function can be specified. Figure 10.10 illustrates how Chameleon works. Chameleon uses a k-nearest-neighbor graph approach to construct a sparse graph, where each vertex of the graph represents a data object, and there exists an edge between two vertices (objects) if one object is among the k-most similar objects to the other. The edges are weighted to reflect the similarity between objects. Chameleon uses a graph partitioning algorithm to partition the k-nearest-neighbor graph into a large number of relatively small subclusters such that it minimizes the edge cut. That is, a cluster C is partitioned into subclusters C i and C j so as to minimize the weight of the edges that would be cut should C be bisected into C i and C j . It assesses the absolute interconnectivity between clusters C i and C j . Chameleon then uses an agglomerative hierarchical clustering algorithm that iteratively merges subclusters based on their similarity. To determine the pairs of most similar subclusters, it takes into account both the interconnectivity and the closeness of the clusters. Specifically, Chameleon determines the similarity between each pair of clusters C i and C j according to their relative interconnectivity, RI(C i , C j ), and their relative closeness, RC(C i , C j ). The relative interconnectivity, RI(C i , C j ), between two clusters, C i and C j , is defined as the absolute interconnectivity between C i and C j , normalized with respect to the internal interconnectivity of the two clusters, C i and C j . That is, where EC {C i ,C j } is the edge cut as previously defined for a cluster containing both C i and C j . Similarly, EC C i (or EC C j ) is the minimum sum of the cut edges that partition C i (or C j ) into two roughly equal parts. The relative closeness, RC(C i , C j ), between a pair of clusters, C i and C j , is the absolute closeness between C i and C j , normalized with respect to the internal closeness of the two clusters, C i and C j . It is defined as where S EC {C i ,C j } is the average weight of the edges that connect vertices in C i to vertices in C j , and S EC C i (or S EC C j ) is the average weight of the edges that belong to the mincut bisector of cluster C i (or C j ). Chameleon has been shown to have greater power at discovering arbitrarily shaped clusters of high quality than several well-known algorithms such as BIRCH and densitybased DBSCAN (Section 10.4.1). However, the processing cost for high-dimensional data may require O(n 2 ) time for n objects in the worst case. 