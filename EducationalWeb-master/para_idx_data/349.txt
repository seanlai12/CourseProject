In this section, we're going to continue discussing opinion mining and sentiment analysis. In particular, we're going to introduce Latent Aspect Rating Analysis (LARA) which allows us to perform detailed analysis of reviews with overall ratings. Figure 18.9 shows two hotel reviews. Both reviewers are given five stars. If you just look at the overall score, it's not very clear whether the hotel is good for its location or for its service. It's also unclear specifically why a reviewer liked this hotel. What we want to do is to decompose this overall rating into ratings on different aspects such as value, room, location, and service. If we can decompose the overall ratings into ratings on these different aspects, we can obtain a much more detailed understanding of the reviewers' opinions about the hotel. This would also allow us to rank hotels along different dimensions such as value or room quality. Using this knowledge, we can better understand how the reviewers view this hotel from their own perspective. Not only do we want to infer these aspect ratings, we also want to infer the aspect weights.  hotel with five stars for value. Despite this, it might still be very expensive. If a reviewer really cares about the value of a hotel, then the five-star review would most likely mean a competitive price. In order to interpret the ratings on different aspects accurately, we also need to know these aspect weights. When these different aspects are combined together with specific weights for each user, we can have a much more detailed understanding of the overall opinion. Thus, the task is to take these reviews and their overall ratings as input and generate both the aspect ratings and aspect weights as output. This is called Latent Aspect Rating Analysis (LARA). More specifically, we are given a set of review articles about a topic with overall ratings, and we hope to generate three things. One is the major aspects commented on in the reviews. Second is ratings on each aspect, such as value and room service. Third is the relative weights placed on different aspects by each reviewer. This task has many applications. For example, we can do opinion-based entity ranking or we can generate an aspect-level opinion summary. We can also analyze reviewers' preferences, compare them, or compare their preferences on different hotels. All this enables personalized product recommendation. As in other cases of these advanced topics, we won't cover the technique in detail. Instead, we will present a basic introduction to the technique developed for this problem, as shown in Figure 18.10. First, we will talk about how to solve the problem in two stages. Later, we mention that we can do this in a unified model.  As input, we are given a review with the overall rating. First, we will segment the aspects; we're going to pick out what words are talking about location, what words are talking about room condition, and so on. In particular, we will obtain the counts of all the words in each segment, denoted by c i (w, d), where i is a particular segment index. This can be done by using seed words like location, room, or price to retrieve the aspect label of each segment. From those segments, we can further mine correlated words with these seed words, which allows us to segment the text into partitions discussing different aspects. Later, we will see that we can also use unsupervised models to do the segmentation. 