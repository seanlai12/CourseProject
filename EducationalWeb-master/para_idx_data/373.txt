Providing such a support for arbitrary tasks or even a large class of tasks is impossible due to the inability of computers to understand natural language and the lack of knowledge about specific task requirements. As a result, we can only build very specialized predictive models for a particular problem, where the features generally have to be designed by humans. This kind of system may provide maximum support for a decision task, but the function of the system is inevitably restricted to a specific task. Since predictive modeling generally requires the use of machine learning techniques and combining features extracted from both text and non-text data, it clearly requires additional support beyond text management and analysis. Yet, we can envision the possibility of developing a relatively general text analysis system to help users identify and extract effective features for a particular prediction task. In order to ensure generality, such a text analysis system must provide relatively general text analysis operators that can be applied to many different problems; most algorithms we introduced in this book are of this kind of nature and can thus be implemented in a system as general operators. However, each specific text analysis application would inevitably have different requirements, thus the operators must also be standardized and compatible with each other so that they can be flexibly combined to support potentially many different workflows. Note that text data access functions such as querying, browsing and recommendation, can all be regarded as instances of specific operators to be "blended" with other operators such as categorization, clustering, or topic analysis. The benefit of such an operator-based text analysis system for supporting text mining and analysis is similar to the benefit that a comprehensive package of car-repairing toolkits brings to car repairers. In order to diagnose the problem of a car and fix it, repairers need to use many different tools and combine them in an ad hoc way to open up components in a car or probe a component with electrical testers. Although the actual workflow often varies depending on the specific problem and models of a car, a common set of tools is often sufficient to accommodate all kinds of tasks. In much the same way, in order to integrate scattered information, digest all the latent relevant knowledge about a problem in text data, analysts can also combine various text analysis tools to open up complex connections between entities or topics buried in text data, identify interesting patterns, and compute useful features for prediction tasks. As in the case of car repairing, although the actual workflow may vary dramatically depending on the specific application, a common set of extensible and trainable analysis tools might also be sufficient to accommodate all kinds of text analysis applications. Most algorithms we introduced in this book can potentially serve as such analysis tools, thus providing a basis for developing a unified system to enable analysts to perform text analysis in such a way. Although there are still many challenges in designing and building such a system, it is an important goal to work on. 